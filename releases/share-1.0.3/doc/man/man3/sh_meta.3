.TH "A meta definition." 3 "3 Apr 2013" "Version 2.0.3" "libshare" \" -*- nroff -*-
.ad l
.nh
.SH NAME
A meta definition. \- 
.PP
A meta definition is part of a \fC\fBshmeta_t\fP\fP hashmap.  

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBshmeta_entry_t\fP"
.br
.ti -1c
.RI "struct \fBshmeta_index_t\fP"
.br
.RI "\fIData structure for iterating through a hash table. \fP"
.ti -1c
.RI "struct \fBshmeta_t\fP"
.br
.RI "\fIThe size of the array is always a power of two. \fP"
.in -1c
.SS "Modules"

.in +1c
.ti -1c
.RI "\fBA meta definition value.\fP"
.br
.PP

.RI "\fIA meta definition value is comprised of a data segment using a \fCshmeta_value_t\fP as a header. \fP"
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBINITIAL_MAX\fP   15"
.br
.RI "\fIThe initial number of hashmap indexes to create. \fP"
.ti -1c
.RI "#define \fBSHMETA_VALUE_MAGIC\fP   0x12345678"
.br
.RI "\fISpecifies a hard-coded value that identifies a \fCshmeta_value_t\fP data segment. \fP"
.ti -1c
.RI "#define \fBSHPF_NONE\fP   0"
.br
.RI "\fIA \fCshmeta_value_t\fP parameter specific to a indeterminate data segment. \fP"
.ti -1c
.RI "#define \fBSHPF_STRING\fP   1"
.br
.RI "\fIA \fCshmeta_value_t\fP parameter specific to a null-terminated string value. \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBshmeta_t\fP \fBshmeta_t\fP"
.br
.RI "\fIA hashmap table. \fP"
.ti -1c
.RI "typedef struct \fBshmeta_index_t\fP \fBshmeta_index_t\fP"
.br
.RI "\fIA hashmap index. \fP"
.ti -1c
.RI "typedef unsigned int(* \fBshmetafunc_t\fP )(const char *key, ssize_t *klen)"
.br
.RI "\fICallback functions for calculating hash values. \fP"
.ti -1c
.RI "typedef struct \fBshmeta_entry_t\fP \fBshmeta_entry_t\fP"
.br
.RI "\fIA hashmap entry. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "unsigned int \fBshmetafunc_default\fP (const char *char_key, ssize_t *klen)"
.br
.RI "\fIThe default hashmap indexing function. \fP"
.ti -1c
.RI "void \fBshmeta_set\fP (\fBshmeta_t\fP *ht, shkey_t sh_k, \fBshmeta_value_t\fP *val)"
.br
.RI "\fISet a meta definition to a particular value. \fP"
.ti -1c
.RI "void * \fBshmeta_get\fP (\fBshmeta_t\fP *ht, shkey_t sh_k)"
.br
.RI "\fIGet a meta definition value. \fP"
.in -1c
.SH "Detailed Description"
.PP 
A meta definition is part of a \fC\fBshmeta_t\fP\fP hashmap. 

\fBNote:\fP
.RS 4
A \fC\fBshfs_tree\fP\fP sharefs file system associates meta definition information with every \fC\fBshfs_node\fP\fP inode entry. 
.RE
.PP

.SH "Typedef Documentation"
.PP 
.SS "typedef unsigned int(* \fBshmetafunc_t\fP)(const char *key, ssize_t *klen)"
.PP
Callback functions for calculating hash values. \fBParameters:\fP
.RS 4
\fIkey\fP The key. 
.br
\fIklen\fP The length of the key. 
.RE
.PP

.PP
Definition at line 78 of file shmeta.h.
.SH "Function Documentation"
.PP 
.SS "void* shmeta_get (\fBshmeta_t\fP * ht, shkey_t sh_k)"
.PP
Get a meta definition value. \fBParameters:\fP
.RS 4
\fIht\fP The meta definition hashmap to retrieve from. 
.br
\fIsh_k\fP The key of the meta definition value. 
.RE
.PP

.SS "void shmeta_set (\fBshmeta_t\fP * ht, shkey_t sh_k, \fBshmeta_value_t\fP * val)"
.PP
Set a meta definition to a particular value. \fBParameters:\fP
.RS 4
\fIht\fP The meta definition hashmap to retrieve from. 
.br
\fIsh_k\fP The key of the meta definition value. 
.br
\fIval\fP The meta definition value using a \fCshmeta_value_t\fP as a header. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for libshare from the source code.
