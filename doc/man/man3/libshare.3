.TH "Libshare" 3 "6 Apr 2013" "Version 2.0.5" "libshare" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Libshare \- 
.PP
Utility functions to generate unique checksums of data.  

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBshpeer_t\fP"
.br
.RI "\fIThe local or remote machine associated with the sharefs partition. \fP"
.ti -1c
.RI "struct \fBshbuf_t\fP"
.br
.RI "\fIA memory buffer. \fP"
.in -1c
.SS "Modules"

.in +1c
.ti -1c
.RI "\fBThe 'sharefs' file-system.\fP"
.br
.PP

.RI "\fIThe sharefs file system overlays ontop of your current filesystem in order to provide extended file operations. \fP"
.ti -1c
.RI "\fBMeta definition hash maps (meta maps).\fP"
.br
.PP

.RI "\fIA meta definition is part of a \fC\fBshmeta_t\fP\fP hashmap. \fP"
.ti -1c
.RI "\fBNetwork socket operations.\fP"
.br
.PP

.RI "\fIThe libshare Socket Handling provides access to regular socket operations with posix or convienence functions in addition to access to the ESP network protocol. \fP"
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBSHSK_PEER_LOCAL\fP   0"
.br
.RI "\fIThe local machine. \fP"
.ti -1c
.RI "#define \fBSHSK_PEER_IPV4\fP   1"
.br
.RI "\fIA remote IPv4 network destination. \fP"
.ti -1c
.RI "#define \fBSHSK_PEER_IPV6\fP   2"
.br
.RI "\fIA remote IPv6 network destination. \fP"
.ti -1c
.RI "#define \fBSHSK_PEER_VPN_IPV4\fP   3"
.br
.RI "\fIA IPv4 network destination on the sharenet VPN. \fP"
.ti -1c
.RI "#define \fBSHSK_PEER_VPN_IPV6\fP   4"
.br
.RI "\fIA IPv6 network destination on the sharenet VPN. \fP"
.ti -1c
.RI "#define \fBSHPREF_BASE_DIR\fP   'base-dir'"
.br
.RI "\fISpecifies the preferred location of where the sharefs filesystem is stored on the local file system. \fP"
.ti -1c
.RI "#define \fBSHPREF_TRACK\fP   'track'"
.br
.RI "\fISpecifies whether to track sharefs filesystem revisions. \fP"
.ti -1c
.RI "#define \fBSHPREF_OVERLAY\fP   'overlay'"
.br
.RI "\fISpecifies whether the sharefs file system references files on the local filesystem. \fP"
.ti -1c
.RI "#define \fBSHPREF_MAX\fP   3"
.br
.RI "\fISpecifies the number of preferences available. \fP"
.ti -1c
.RI "#define \fBshpref_track\fP()   (0 == strcmp(shpref_get(SHPREF_TRACK), 'true') ? TRUE : FALSE)"
.br
.RI "\fISpecifies whether to track sharefs filesystem revisions. \fP"
.ti -1c
.RI "#define \fBshpref_set_track\fP(opt)   (opt ? shpref_set(SHPREF_TRACK, 'true') : shpref_set(SHPREF_TRACK, 'false'))"
.br
.RI "\fIPermanently sets the \fCSHPREF_TRACK\fP option. \fP"
.ti -1c
.RI "#define \fBshpref_overlay\fP()   (0 == strcmp(shpref_get(SHPREF_OVERLAY), 'true') ? TRUE : FALSE)"
.br
.RI "\fISpecifies whether to overlay the sharefs filesystem ontop of the work directory on the local filesystem. \fP"
.ti -1c
.RI "#define \fBshpref_set_overlay\fP(opt)   (opt ? shpref_set(SHPREF_OVERLAY, 'true') : shpref_set(SHPREF_OVERLAY, 'false'))"
.br
.RI "\fIPermanently sets the \fCSHPREF_OVERLAY\fP option. \fP"
.ti -1c
.RI "#define \fBshpref_unset\fP(pref)   shpref_set(pref, NULL)"
.br
.RI "\fIPersistently unset a libshare configuration option. \fP"
.ti -1c
.RI "#define \fBshpref_sess_set\fP(pref, value)   shmeta_set(_pref, shkey_init_str(pref), value)"
.br
.RI "\fIOverwrite a preference for the current session. \fP"
.ti -1c
.RI "#define \fBshpref_sess_unset\fP(pref)   shpref_sess_set(pref, NULL)"
.br
.RI "\fITemporarily unset a libshare configuration option. \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef uint64_t \fBshsize_t\fP"
.br
.RI "\fIA specification of byte size. \fP"
.ti -1c
.RI "typedef uint64_t \fBshkey_t\fP"
.br
.RI "\fIA key used to represent a hash code of an object. \fP"
.ti -1c
.RI "typedef uint64_t \fBshtime_t\fP"
.br
.RI "\fIThe libshare representation of a particular time. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "char * \fBget_libshare_email\fP (void)"
.br
.RI "\fIAn email address where bug reports can be submitted. \fP"
.ti -1c
.RI "char * \fBget_libshare_version\fP (void)"
.br
.RI "\fIThe current libshare library version. \fP"
.ti -1c
.RI "char * \fBget_libshare_title\fP (void)"
.br
.RI "\fIThe libshare library package name. \fP"
.ti -1c
.RI "\fBshbuf_t\fP * \fBshbuf_init\fP (void)"
.br
.RI "\fIInitialize a memory buffer for use. \fP"
.ti -1c
.RI "void \fBshbuf_catstr\fP (\fBshbuf_t\fP *buf, char *data)"
.br
.RI "\fIInserts a string into a \fC\fBshbuf_t\fP\fP memory pool. \fP"
.ti -1c
.RI "void \fBshbuf_cat\fP (\fBshbuf_t\fP *buf, void *data, size_t data_len)"
.br
.RI "\fIInserts a binary data segment into a \fC\fBshbuf_t\fP\fP memory pool. \fP"
.ti -1c
.RI "size_t \fBshbuf_size\fP (\fBshbuf_t\fP *buf)"
.br
.RI "\fIThe current size of the data segement stored in the memory buffer. \fP"
.ti -1c
.RI "void \fBshbuf_clear\fP (\fBshbuf_t\fP *buf)"
.br
.RI "\fIClear the contents of a \fC\fBshbuf_t\fP\fP libshare memory buffer. \fP"
.ti -1c
.RI "void \fBshbuf_free\fP (\fBshbuf_t\fP **buf_p)"
.br
.RI "\fIFrees the resources utilizited by the memory buffer. \fP"
.ti -1c
.RI "\fBshkey_t\fP \fBshkey_init_str\fP (char *kvalue)"
.br
.RI "\fICreate a \fCshkey_t\fP hashmap key reference from \fCkvalue\fP \fIkvalue\fP The string to generate into a \fCshkey_t\fP. \fP"
.ti -1c
.RI "\fBshkey_t\fP \fBshkey_init_num\fP (long kvalue)"
.br
.RI "\fICreate a \fCshkey_t\fP hashmap key reference from a number. \fP"
.ti -1c
.RI "\fBshkey_t\fP \fBshkey_init_unique\fP (void)"
.br
.RI "\fICreate a unique \fCshkey_t\fP hashmap key reference. \fP"
.ti -1c
.RI "char * \fBshpref_base_dir\fP (void)"
.br
.RI "\fISpecifies the preferred location of where the sharefs filesystem is stored on the local file system. \fP"
.ti -1c
.RI "char * \fBshpref_path\fP (void)"
.br
.RI "\fIThe local filesystem path for storing configuration options. \fP"
.ti -1c
.RI "int \fBshpref_init\fP (void)"
.br
.RI "\fIInitialize an instance of configuration options in memory. \fP"
.ti -1c
.RI "void \fBshpref_free\fP (void)"
.br
.RI "\fIFree the configuration options loaded into memory. \fP"
.ti -1c
.RI "char * \fBshpref_get\fP (char *pref, char *default_value)"
.br
.RI "\fIRetrieve a configuration option value. \fP"
.ti -1c
.RI "int \fBshpref_set\fP (char *pref, char *value)"
.br
.RI "\fISet a persistent value for a particular libshare user-specific configuration option. \fP"
.ti -1c
.RI "double \fBshtime\fP (void)"
.br
.RI "\fIGenerate a float-point precision representation of the current time. \fP"
.ti -1c
.RI "\fBshtime_t\fP \fBshtime64\fP (void)"
.br
.RI "\fIGenerate a 64bit representation integral of the current time with millisecond precision. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Utility functions to generate unique checksums of data. 

Time operations are performed in order to store and compare timestamps in the sharefs file system and for network operations.
.PP
Handles management of user-specific configuration options for the Share Library.
.PP
Hash code token operations.
.PP
\fBNote:\fP
.RS 4
See the \fBshpref_sess_set()\fP function for information on overwriting an option values for the current process session. Specify user specific configuration items.
.RE
.PP
libshare_time Time calculating operations. 
.SH "Define Documentation"
.PP 
.SS "#define SHPREF_BASE_DIR   'base-dir'"
.PP
Specifies the preferred location of where the sharefs filesystem is stored on the local file system. \fBNote:\fP
.RS 4
The default location is '$HOME/.share'. 
.PP
Use \fC\fBshpref_sess_set()\fP\fP to temporarily overwrite this value. 
.RE
.PP

.PP
Definition at line 44 of file shpref.h.
.SS "#define shpref_overlay()   (0 == strcmp(shpref_get(SHPREF_OVERLAY), 'true') ? TRUE : FALSE)"
.PP
Specifies whether to overlay the sharefs filesystem ontop of the work directory on the local filesystem. \fBNote:\fP
.RS 4
Disable this option to prevent libshare from writing outside of the base directory. 
.RE
.PP
\fBReturns:\fP
.RS 4
A zero (0) when disabled and a non-zero value when enabled. 
.RE
.PP

.PP
Definition at line 86 of file shpref.h.
.SS "#define SHPREF_OVERLAY   'overlay'"
.PP
Specifies whether the sharefs file system references files on the local filesystem. \fBNote:\fP
.RS 4
Use \fC\fBshpref_sess_set()\fP\fP to temporarily overwrite this value. 
.RE
.PP

.PP
Definition at line 54 of file shpref.h.
.SS "#define shpref_set_overlay(opt)   (opt ? shpref_set(SHPREF_OVERLAY, 'true') : shpref_set(SHPREF_OVERLAY, 'false'))"
.PP
Permanently sets the \fCSHPREF_OVERLAY\fP option. \fBParameters:\fP
.RS 4
\fIopt\fP A zero to disable the option and a non-zero to enable. 
.RE
.PP

.PP
Definition at line 93 of file shpref.h.
.SS "#define shpref_set_track(opt)   (opt ? shpref_set(SHPREF_TRACK, 'true') : shpref_set(SHPREF_TRACK, 'false'))"
.PP
Permanently sets the \fCSHPREF_TRACK\fP option. \fBParameters:\fP
.RS 4
\fIopt\fP A zero to disable the option and a non-zero to enable. 
.RE
.PP

.PP
Definition at line 78 of file shpref.h.
.SS "#define shpref_track()   (0 == strcmp(shpref_get(SHPREF_TRACK), 'true') ? TRUE : FALSE)"
.PP
Specifies whether to track sharefs filesystem revisions. \fBReturns:\fP
.RS 4
A zero (0) when disabled and a non-zero value when enabled. 
.RE
.PP

.PP
Definition at line 71 of file shpref.h.
.SS "#define SHPREF_TRACK   'track'"
.PP
Specifies whether to track sharefs filesystem revisions. \fBNote:\fP
.RS 4
Use \fC\fBshpref_sess_set()\fP\fP to temporarily overwrite this value. 
.RE
.PP

.PP
Definition at line 49 of file shpref.h.
.SH "Typedef Documentation"
.PP 
.SS "typedef uint64_t \fBshsize_t\fP"
.PP
A specification of byte size.  
 See the libshare_socket.3 API man page for ESP protocol network operations.
   \fBshmeta_value_t.sz\fP 
.PP
Definition at line 94 of file share.h.
.SH "Function Documentation"
.PP 
.SS "\fBshbuf_t\fP* shbuf_init (void)"
.PP
Initialize a memory buffer for use. \fBNote:\fP
.RS 4
A \fC\fBshbuf_t\fP\fP memory buffer handles automatic allocation of memory. 
.RE
.PP

.SS "\fBshkey_t\fP shkey_init_num (long kvalue)"
.PP
Create a \fCshkey_t\fP hashmap key reference from a number. \fIkvalue\fP The number to generate into a \fCshkey_t\fP 
.PP
\fBReturns:\fP
.RS 4
A statically allocated version of  
.RE
.PP

.SS "\fBshkey_t\fP shkey_init_str (char * kvalue)"
.PP
Create a \fCshkey_t\fP hashmap key reference from \fCkvalue\fP \fIkvalue\fP The string to generate into a \fCshkey_t\fP. \fBReturns:\fP
.RS 4
A \fCshkey_t\fP referencing a kvalue 
.RE
.PP

.SS "\fBshkey_t\fP shkey_init_unique (void)"
.PP
Create a unique \fCshkey_t\fP hashmap key reference. \fBReturns:\fP
.RS 4
A \fCshkey_t\fP containing a unique key value. 
.RE
.PP

.SS "char* shpref_base_dir (void)"
.PP
Specifies the preferred location of where the sharefs filesystem is stored on the local file system. \fBReturns:\fP
.RS 4
The path to a directory on the local file-system. 
.RE
.PP

.SS "void shpref_free (void)"
.PP
Free the configuration options loaded into memory. \fBNote:\fP
.RS 4
This will remove all temporar configuration settings that have been made this process session. 
.RE
.PP

.SS "char* shpref_get (char * pref, char * default_value)"
.PP
Retrieve a configuration option value. \fBParameters:\fP
.RS 4
\fIpref\fP The name of the preference. 
.br
\fIdefault_value\fP The default string value to return if the preference is not set. 
.RE
.PP
\fBReturns:\fP
.RS 4
The configuration option value. 
.RE
.PP

.SS "int shpref_init (void)"
.PP
Initialize an instance of configuration options in memory. \fBNote:\fP
.RS 4
This function does not need to be called in order to retrieve or set configuration options. 
.RE
.PP
\fBReturns:\fP
.RS 4
A zero (0) on success and a negative one (-1) on failure. 
.RE
.PP

.SS "char* shpref_path (void)"
.PP
The local filesystem path for storing configuration options. \fBReturns:\fP
.RS 4
The path to the location on the local file-system that contains user-specific libshare configuration options. 
.RE
.PP

.SS "int shpref_set (char * pref, char * value)"
.PP
Set a persistent value for a particular libshare user-specific configuration option. Specify user specific configuration items: SHPREF_BASE_DIR The base directory to store sharefs file data. SHPREF_TRACK Whether to automatically track file revisions. SHPREF_OVERLAY Whether to write outside of the base directory. Set a configuration option value. 
.PP
\fBParameters:\fP
.RS 4
\fIpref\fP The name of the preference. 
.br
\fIvalue\fP The configuration option value. 
.RE
.PP
\fBReturns:\fP
.RS 4
The configuration option value. 
.RE
.PP

.SS "double shtime (void)"
.PP
Generate a float-point precision representation of the current time. \fBReturns:\fP
.RS 4
an double representing the milliseconds since 2012 UTC. 
.RE
.PP

.SS "\fBshtime_t\fP shtime64 (void)"
.PP
Generate a 64bit representation integral of the current time with millisecond precision. \fBReturns:\fP
.RS 4
an unsigned long representing the milliseconds since 2012 UTC. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for libshare from the source code.
