!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
DEFAULT_SCRYPT_DIFFICULTY	transaction.c	28;"	d	file:
DEFAULT_SCRYPT_NBIT	transaction.c	29;"	d	file:
LEDGERF_UPDATE	ledger.c	28;"	d	file:
MAXIMUM_APP_TRUST	app.c	29;"	d	file:
MINIMUM_APP_TRUST	app.c	28;"	d	file:
SHAREDAEMON_DEVICE_POLL_TIME	../sharedaemon_server.c	558;"	d	file:
STATE_CYCLE	../sharedaemon_server.c	26;"	d	file:
STATE_NONE	../sharedaemon_server.c	25;"	d	file:
TEST_BUFFER_SIZE	../sharedaemon_server.c	31;"	d	file:
__BITS__EVENT_C__	event.c	29;"	d	file:
_fcrypt_generate_transaction_id	transaction.c	/^static void _fcrypt_generate_transaction_id(tx_t *tx)$/;"	f	file:
_generate_app_tx	app.c	/^static int _generate_app_tx(tx_app_t *app, shpeer_t *peer)$/;"	f	file:
_generate_session_shadow	session.c	/^static int _generate_session_shadow(tx_id_t *id, tx_session_t *sess)$/;"	f	file:
_message_queue	../sharedaemon_server.c	/^static int _message_queue;$/;"	v	file:
_message_queue_buff	../sharedaemon_server.c	/^static shbuf_t *_message_queue_buff;$/;"	v	file:
_pstore_fs	../sharedaemon_store.c	/^static shfs_t *_pstore_fs;$/;"	v	file:
_scrypt_generate_transaction_id	transaction.c	/^static int _scrypt_generate_transaction_id(tx_t *tx, char *phash, char *hash, char **merkle_list)$/;"	f	file:
abandon_ledger	ledger.c	/^void abandon_ledger(tx_t *tx)$/;"	f
broadcast_filter	../sharedaemon_server.c	/^int broadcast_filter(shd_t *user, tx_t *tx)$/;"	f
broadcast_raw	../sharedaemon_server.c	/^void broadcast_raw(void *raw_data, size_t data_len)$/;"	f
confirm_account	account.c	/^int confirm_account(tx_account_t *acc)$/;"	f
confirm_app	app.c	/^int confirm_app(tx_app_t *app)$/;"	f
confirm_event	event.c	/^int confirm_event(tx_event_t *event)$/;"	f
confirm_signature	signature.c	/^int confirm_signature(shsig_t *sig, char *tx_hash)$/;"	f
confirm_ward	ward.c	/^int confirm_ward(tx_ward_t *ward)$/;"	f
cycle_client_request	../sharedaemon_server.c	/^void cycle_client_request(shd_t *cli)$/;"	f
cycle_init	../sharedaemon_server.c	/^void cycle_init(void)$/;"	f
cycle_main	../sharedaemon_server.c	/^void cycle_main(int run_state)$/;"	f
cycle_msg_queue	../sharedaemon_server.c	/^void cycle_msg_queue(void)$/;"	f
cycle_msg_queue_in	../sharedaemon_server.c	/^static void cycle_msg_queue_in(void)$/;"	f	file:
cycle_msg_queue_out	../sharedaemon_server.c	/^static void cycle_msg_queue_out(void)$/;"	f	file:
cycle_socket	../sharedaemon_server.c	/^void cycle_socket(fd_set *read_fd, fd_set *write_fd)$/;"	f
cycle_term	../sharedaemon_server.c	/^void cycle_term(void)$/;"	f
cycle_usb_device	../sharedaemon_server.c	/^void cycle_usb_device(void)$/;"	f
decr_app_trust	app.c	/^void decr_app_trust(tx_app_t *cli)$/;"	f
device_def	../sharedaemon_device.c	/^shdev_def_t device_def[MAX_DEVICE_DEFINITIONS] = {$/;"	v
free_account	account.c	/^void free_account(tx_account_t **acc_p)$/;"	f
free_ledger	ledger.c	/^void free_ledger(tx_ledger_t **ledger_p, tx_t **tx_p)$/;"	f
generate_account	account.c	/^tx_account_t *generate_account(shseed_t *seed)$/;"	f
generate_event	event.c	/^int generate_event(tx_event_t *event, shpeer_t *peer, time_t duration)$/;"	f
generate_signature	signature.c	/^void generate_signature(shsig_t *sig, shpeer_t *peer, tx_t *tx)$/;"	f
generate_trust	trust.c	/^int generate_trust(tx_trust_t *trust, shpeer_t *peer, shkey_t *context)$/;"	f
generate_ward	ward.c	/^int generate_ward(tx_ward_t *ward, tx_t *tx, tx_id_t *id)$/;"	f
global_identity_confirm	identity.c	/^int global_identity_confirm(tx_id_t *id)$/;"	f
global_session_confirm	session.c	/^int global_session_confirm(tx_session_t *sess)$/;"	f
incr_app_trust	app.c	/^void incr_app_trust(tx_app_t *cli)$/;"	f
init_app	app.c	/^tx_app_t *init_app(shpeer_t *peer)$/;"	f
ledger_archive	ledger.c	/^int ledger_archive(ledger_t *l)$/;"	f
ledger_close	ledger.c	/^int ledger_close(ledger_t *l)$/;"	f
ledger_init	ledger.c	/^static ledger_t *ledger_init(void)$/;"	f	file:
ledger_load	ledger.c	/^ledger_t *ledger_load(shpeer_t *peer, shtime_t now)$/;"	f
ledger_save	ledger.c	/^int ledger_save(ledger_t *l)$/;"	f
ledger_tx_add	ledger.c	/^int ledger_tx_add(ledger_t *l, tx_t *tx)$/;"	f
ledger_tx_load	ledger.c	/^tx_t *ledger_tx_load(shpeer_t *peer, char *tx_hash, shtime_t tx_stamp)$/;"	f
listen_sk	../sharedaemon_server.c	/^int listen_sk;$/;"	v
listen_tx	../sharedaemon_server.c	/^int listen_tx(int tx_op, shd_t *cli, shkey_t *peer_key)$/;"	f
load_def_account_tx	account.c	/^tx_account_t *load_def_account_tx(char *id_hash)$/;"	f
local_broadcast_metric	metric.c	/^int local_broadcast_metric(tx_metric_t *metric)$/;"	f
local_broadcast_trust	trust.c	/^int local_broadcast_trust(tx_trust_t *trust)$/;"	f
local_confirm_metric	metric.c	/^int local_confirm_metric(tx_metric_t *metric, uint64_t sig)$/;"	f
local_identity_generate	identity.c	/^int local_identity_generate(uint64_t uid, shpeer_t *app_peer, tx_id_t **id_p)$/;"	f
local_identity_inform	identity.c	/^int local_identity_inform(tx_app_t *cli, tx_id_t *id)$/;"	f
local_identity_shadow_generate	identity.c	/^static int local_identity_shadow_generate(tx_id_t *id)$/;"	f	file:
local_metric_generate	metric.c	/^int local_metric_generate(int type, void *data, size_t data_len, tx_metric_t **metric_p)$/;"	f
local_session_generate	session.c	/^int local_session_generate(tx_id_t *id, shtime_t sess_stamp, tx_session_t **sess_p)$/;"	f
local_session_inform	session.c	/^int local_session_inform(tx_app_t *cli, tx_session_t *session)$/;"	f
local_transid_generate	transaction.c	/^int local_transid_generate(int tx_op, tx_t *tx)$/;"	f
main	../sharedaemon.c	/^int main(int argc, char *argv[])$/;"	f
prep_transaction	transaction.c	/^int prep_transaction(tx_t *tx)$/;"	f
proc_msg	../sharedaemon_server.c	/^void proc_msg(int type, shkey_t *key, unsigned char *data, size_t data_len)$/;"	f
process_account_tx	account.c	/^int process_account_tx(tx_account_t *acc)$/;"	f
process_app_tx	app.c	/^int process_app_tx(tx_app_t *app)$/;"	f
process_event_tx	event.c	/^int process_event_tx(tx_event_t *event)$/;"	f
process_ledger_tx	ledger.c	/^int process_ledger_tx(tx_app_t *cli, tx_ledger_t *ledger)$/;"	f
process_trust_tx	trust.c	/^int process_trust_tx(tx_trust_t *trust)$/;"	f
process_ward_tx	ward.c	/^int process_ward_tx(tx_app_t *cli, tx_ward_t *ward)$/;"	f
propose_ledger	ledger.c	/^void propose_ledger(tx_ledger_t *led, tx_t *payload, size_t size)$/;"	f
pstore_delete	../sharedaemon_store.c	/^int pstore_delete(int tx_op, char *hash)$/;"	f
pstore_free	../sharedaemon_store.c	/^void pstore_free(void *tx)$/;"	f
pstore_init	../sharedaemon_store.c	/^void pstore_init(void)$/;"	f
pstore_load	../sharedaemon_store.c	/^void *pstore_load(int tx_op, char *hash)$/;"	f
pstore_read	../sharedaemon_store.c	/^void *pstore_read(int tx_op, char *name)$/;"	f
pstore_remove	../sharedaemon_store.c	/^void pstore_remove(int tx_op, char *hash, void *data)$/;"	f
pstore_save	../sharedaemon_store.c	/^int pstore_save(void *data, size_t data_len)$/;"	f
pstore_write	../sharedaemon_store.c	/^int pstore_write(int tx_op, char *name, unsigned char *data, size_t data_len)$/;"	f
remote_identity_inform	identity.c	/^int remote_identity_inform(tx_id_t *id)$/;"	f
remote_session_inform	session.c	/^int remote_session_inform(tx_session_t *sess)$/;"	f
remote_trust_receive	trust.c	/^int remote_trust_receive(tx_app_t *cli, tx_trust_t *trust)$/;"	f
run_state	../sharedaemon_server.c	/^int run_state;$/;"	v
sched_tx	schedule.c	/^void sched_tx(void *data, size_t data_len)$/;"	f
sched_tx_payload	schedule.c	/^void sched_tx_payload(void *data, size_t data_len, void *payload, size_t payload_len)$/;"	f
server_ledger	../sharedaemon.c	/^tx_ledger_t *server_ledger;$/;"	v
server_peer	../sharedaemon.c	/^shpeer_t *server_peer;$/;"	v
share_server	../sharedaemon_server.c	/^void share_server(char *process_path, char *subcmd)$/;"	f
sharedaemon_account	account.c	/^tx_account_t *sharedaemon_account(void)$/;"	f
sharedaemon_app_init	../sharedaemon_app.c	/^int sharedaemon_app_init(shd_t *cli, shpeer_t *peer)$/;"	f
sharedaemon_app_load	../sharedaemon_app.c	/^tx_app_t *sharedaemon_app_load(shkey_t *app_key)$/;"	f
sharedaemon_app_save	../sharedaemon_app.c	/^int sharedaemon_app_save(tx_app_t *app)$/;"	f
sharedaemon_client_find	../sharedaemon_client.c	/^shd_t *sharedaemon_client_find(shkey_t *key)$/;"	f
sharedaemon_client_free	../sharedaemon_client.c	/^void sharedaemon_client_free(shd_t **cli_p)$/;"	f
sharedaemon_client_init	../sharedaemon_client.c	/^shd_t *sharedaemon_client_init(void)$/;"	f
sharedaemon_client_list	../sharedaemon_client.c	/^shd_t *sharedaemon_client_list;$/;"	v
sharedaemon_device_add	../sharedaemon_device.c	/^int sharedaemon_device_add(shdev_def_t *def)$/;"	f
sharedaemon_device_control	../sharedaemon_device.c	/^int sharedaemon_device_control(shdev_t *dev)$/;"	f
sharedaemon_device_free	../sharedaemon_device.c	/^void sharedaemon_device_free(shdev_t *r_dev)$/;"	f
sharedaemon_device_list	../sharedaemon_device.c	/^shdev_t *sharedaemon_device_list;$/;"	v
sharedaemon_device_poll	../sharedaemon_device.c	/^int sharedaemon_device_poll(shdev_t *dev, int poll_ms)$/;"	f
sharedaemon_device_shutdown	../sharedaemon_device.c	/^int sharedaemon_device_shutdown(shdev_t *r_dev)$/;"	f
sharedaemon_device_start	../sharedaemon_device.c	/^int sharedaemon_device_start(shdev_t *dev)$/;"	f
sharedaemon_device_timer	../sharedaemon_device.c	/^int sharedaemon_device_timer(shdev_t *dev)$/;"	f
sharedaemon_device_unlink	../sharedaemon_device.c	/^void sharedaemon_device_unlink(shdev_t *r_dev)$/;"	f
sharedaemon_fs	../sharedaemon_file.c	/^SHFS *sharedaemon_fs(void)$/;"	f
sharedaemon_msgclient_init	../sharedaemon_client.c	/^int sharedaemon_msgclient_init(shpeer_t *peer)$/;"	f
sharedaemon_netclient_init	../sharedaemon_client.c	/^int sharedaemon_netclient_init(int fd, struct sockaddr_in *net_addr)$/;"	f
sharedaemon_print_usage	../sharedaemon.c	/^static void sharedaemon_print_usage(void)$/;"	f	file:
sharedaemon_print_version	../sharedaemon.c	/^static void sharedaemon_print_version(void)$/;"	f	file:
sharedaemon_signal	../sharedaemon.c	/^void sharedaemon_signal(int sig_num)$/;"	f
sharedaemon_term	../sharedaemon.c	/^void sharedaemon_term(void)$/;"	f
validate_trust	trust.c	/^int validate_trust(tx_trust_t *trust)$/;"	f
