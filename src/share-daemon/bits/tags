!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BOND_CREDIT_VALUE	bits.h	305;"	d
BROADCAST_TIMEOUT	../sharedaemon_bcast.c	37;"	d	file:
CALC_TXFILE_FEE	bits.h	421;"	d
DEFAULT_SCRYPT_DIFFICULTY	transaction.c	28;"	d	file:
DEFAULT_SCRYPT_NBIT	transaction.c	29;"	d	file:
FALSE	../sharedaemon.h	86;"	d
INIT_TX_KEY	init.c	28;"	d	file:
LEDGERF_UPDATE	ledger.c	28;"	d	file:
MAX	../sharedaemon.h	99;"	d
MAXIMUM_APP_TRUST	app.c	29;"	d	file:
MAX_CLIENT_CONNECTIONS	../sharedaemon_server.h	25;"	d
MAX_CLIENT_CONNECTION_IDLE_TIME	../sharedaemon_server.h	26;"	d
MAX_CLIENT_IDLE_TIME	../sharedaemon_server.h	27;"	d
MAX_DEVICE_DEFINITIONS	../sharedaemon_device.h	30;"	d
MAX_SCHEDULE_TASKS	bits.h	21;"	d
MAX_SHARE_GATEWAY_PORTS	../sharedaemon.h	76;"	d
MAX_TRANSACTIONS_PER_LEDGER	bits.h	19;"	d
MAX_TX_ONCE	bits.h	17;"	d
MIN	../sharedaemon.h	94;"	d
MINIMUM_APP_TRUST	app.c	28;"	d	file:
MIN_TX_ONCE	bits.h	15;"	d
NO_TXFILE_FEE	bits.h	423;"	d
PROC_SERVE	../sharedaemon.h	83;"	d
SEG_CHECKSUM_SIZE	file.c	124;"	d	file:
SHAREDAEMON_DEVICE_POLL_TIME	../sharedaemon_server.c	595;"	d	file:
SHARED_BROADCAST_PORT	../sharedaemon_bcast.c	36;"	d	file:
SHARENET_PROTOCOL_VERSION	bits.h	23;"	d
SHARE_DAEMON_PORT	../sharedaemon.h	69;"	d
SHARE_GATEWAY_PORT	../sharedaemon.h	78;"	d
SHARE_HTTP_DAEMON_PORT	../sharedaemon.h	70;"	d
SHDEV_MAGTEK_PID	../sharedaemon_device.h	25;"	d
SHDEV_MAGTEK_VID	../sharedaemon_device.h	24;"	d
SHDEV_ZTEX_PID	../sharedaemon_device.h	28;"	d
SHDEV_ZTEX_VID	../sharedaemon_device.h	27;"	d
SHD_CLIENT_AUTH	../sharedaemon_client.h	16;"	d
SHD_CLIENT_HTTP	../sharedaemon_client.h	12;"	d
SHD_CLIENT_MSG	../sharedaemon_client.h	8;"	d
SHD_CLIENT_NET	../sharedaemon_client.h	10;"	d
SHD_CLIENT_REGISTER	../sharedaemon_client.h	14;"	d
SHD_CLIENT_SHUTDOWN	../sharedaemon_client.h	18;"	d
SHLINK_ADMINISTRATOR	bits.h	551;"	d
SHLINK_CONNECTION	bits.h	555;"	d
SHLINK_INVOLVED	bits.h	553;"	d
SHLINK_NET_CONNECTION	bits.h	547;"	d
SHLINK_NET_TERM_POINT	bits.h	541;"	d
SHLINK_ON_DEVICE	bits.h	545;"	d
SHLINK_OWNER	bits.h	549;"	d
SHLINK_SERVED_BY	bits.h	543;"	d
SHLINK_SERVICE_PROVIDER	bits.h	539;"	d
SHLINK_TERMINATION_DEVICE	bits.h	537;"	d
SHMETRIC_CARD	bits.h	353;"	d
SHMETRIC_NONE	bits.h	352;"	d
SHMETRIC_ZTEX	bits.h	354;"	d
SHOP_LISTEN	../sharedaemon_client.h	21;"	d
STATE_CYCLE	../sharedaemon_server.c	26;"	d	file:
STATE_NONE	../sharedaemon_server.c	25;"	d	file:
TEMPL_2FA	../sharedaemon_client.h	28;"	d
TEMPL_ACCESS	../sharedaemon_client.h	27;"	d
TEMPL_DEFAULT	../sharedaemon_client.h	24;"	d
TEMPL_LOGIN	../sharedaemon_client.h	26;"	d
TEMPL_REGISTER	../sharedaemon_client.h	25;"	d
TEST_BUFFER_SIZE	../sharedaemon_server.c	32;"	d	file:
TRUE	../sharedaemon.h	90;"	d
TXBOND_COMPLETE	bits.h	303;"	d
TXBOND_CONFIRM	bits.h	300;"	d
TXBOND_FINAL	bits.h	301;"	d
TXBOND_NONE	bits.h	298;"	d
TXBOND_PENDING	bits.h	299;"	d
TXBOND_SYNC	bits.h	302;"	d
TXFILE_CHECKSUM	bits.h	415;"	d
TXFILE_FEE	bits.h	419;"	d
TXFILE_LINK	bits.h	411;"	d
TXFILE_LIST	bits.h	409;"	d
TXFILE_NONE	bits.h	403;"	d
TXFILE_READ	bits.h	405;"	d
TXFILE_SYNC	bits.h	417;"	d
TXFILE_UNLINK	bits.h	413;"	d
TXFILE_WRITE	bits.h	407;"	d
TXF_TRUST	bits.h	120;"	d
TXHASH_FCRYPT	transaction.h	34;"	d
TXHASH_SCRYPT	transaction.h	33;"	d
__BITS__ACCOUNT_H__	account.h	30;"	d
__BITS__APP_H__	app.h	30;"	d
__BITS__ASSET_H__	asset.h	23;"	d
__BITS__BITS_H__	bits.h	3;"	d
__BITS__EVENT_C__	event.c	29;"	d	file:
__BITS__EVENT_H__	event.h	30;"	d
__BITS__IDENTITY_H__	identity.h	29;"	d
__BITS__INIT_H__	init.h	29;"	d
__BITS__LEDGER_H__	ledger.h	30;"	d
__BITS__SCHEDULE_H__	schedule.h	31;"	d
__BITS__SESSION_H__	session.h	23;"	d
__BITS__SIGNATURE_H__	signature.h	31;"	d
__BITS__SUBSCRIBE_H__	subscribe.h	30;"	d
__BITS__THREAD_H__	thread.h	30;"	d
__BITS__TRANSACTION_H__	transaction.h	30;"	d
__BITS__TRUST_H__	trust.h	31;"	d
__BITS__WARD_H__	ward.h	30;"	d
__SHAREDAEMON_CLIENT_H__	../sharedaemon_client.h	4;"	d
__SHAREDAEMON_FILE_H__	../sharedaemon_file.h	3;"	d
__SHAREDAEMON_H__	../sharedaemon.h	23;"	d
__SHAREDAEMON_SERVER_H__	../sharedaemon_server.h	23;"	d
__STRICT_ANSI__	../sharedaemon.h	31;"	d
__reserved_1__	bits.h	/^  uint32_t __reserved_1__;$/;"	m	struct:tx_init_t
__reserved_1__	bits.h	/^  uint32_t __reserved_1__;$/;"	m	struct:tx_t
__reserved_1__	bits.h	/^uint32_t __reserved_1__;$/;"	m	struct:tx_app_t
_asset_labels	asset.c	/^static const char *_asset_labels[MAX_TX_ASSETS] = {$/;"	v	file:
_bcast_recv_addr	../sharedaemon_bcast.c	/^static struct sockaddr_in _bcast_recv_addr;$/;"	v	typeref:struct:sockaddr_in	file:
_bcast_recv_fd	../sharedaemon_bcast.c	/^static int _bcast_recv_fd;$/;"	v	file:
_fcrypt_generate_transaction_id	transaction.c	/^static void _fcrypt_generate_transaction_id(tx_t *tx)$/;"	f	file:
_generate_app_tx	app.c	/^static int _generate_app_tx(tx_app_t *app, shpeer_t *peer)$/;"	f	file:
_generate_session_shadow	session.c	/^static int _generate_session_shadow(tx_id_t *id, tx_session_t *sess)$/;"	f	file:
_message_queue	../sharedaemon_server.c	/^static int _message_queue;$/;"	v	file:
_message_queue_buff	../sharedaemon_server.c	/^static shbuf_t *_message_queue_buff;$/;"	v	file:
_no_fork	../sharedaemon.c	/^static int _no_fork;$/;"	v	file:
_pstore_fs	../sharedaemon_store.c	/^static shfs_t *_pstore_fs;$/;"	v	file:
_scrypt_generate_transaction_id	transaction.c	/^static int _scrypt_generate_transaction_id(tx_t *tx, char *phash, char *hash, char **merkle_list)$/;"	f	file:
abandon_ledger	ledger.c	/^void abandon_ledger(tx_t *tx)$/;"	f
acc_tx	bits.h	/^  tx_t acc_tx;$/;"	m	struct:tx_account_t
app	../sharedaemon_client.h	/^  tx_app_t *app;$/;"	m	struct:shd_t
app_arch	bits.h	/^  uint32_t app_arch;$/;"	m	struct:tx_app_t
app_birth	bits.h	/^  shtime_t app_birth;$/;"	m	struct:tx_app_t
app_context	bits.h	/^  shkey_t app_context;$/;"	m	struct:tx_app_t
app_flags	bits.h	/^  uint32_t app_flags;$/;"	m	struct:tx_app_t
app_peer	../sharedaemon_client.h	/^  shpeer_t app_peer;$/;"	m	struct:shd_msg_t
app_peer	bits.h	/^  shpeer_t app_peer;$/;"	m	struct:tx_app_t
app_sig	bits.h	/^  shkey_t app_sig;$/;"	m	struct:tx_app_t
app_stamp	bits.h	/^  shtime_t app_stamp;$/;"	m	struct:tx_app_t
app_trust	bits.h	/^  uint32_t app_trust;$/;"	m	struct:tx_app_t
app_tx	bits.h	/^  tx_t app_tx;$/;"	m	struct:tx_app_t
ass_birth	bits.h	/^  shtime_t ass_birth;$/;"	m	struct:tx_asset_t
ass_code	bits.h	/^  char ass_code[16];$/;"	m	struct:tx_asset_t
ass_data	bits.h	/^  unsigned char ass_data[0];$/;"	m	struct:tx_asset_t
ass_id	bits.h	/^  shkey_t ass_id;$/;"	m	struct:tx_asset_t
ass_lic	bits.h	/^  shkey_t ass_lic;$/;"	m	struct:tx_asset_t
ass_loc	bits.h	/^  shgeo_t ass_loc;$/;"	m	struct:tx_asset_t
ass_locale	bits.h	/^  char ass_locale[16]; \/* [a-zA-Z]{2,3}(-([a-zA-Z]{2}|[0-9]{3}))? *\/$/;"	m	struct:tx_asset_t
ass_sig	bits.h	/^  shkey_t ass_sig;$/;"	m	struct:tx_asset_t
ass_size	bits.h	/^  uint32_t ass_size;$/;"	m	struct:tx_asset_t
ass_stamp	bits.h	/^  shtime_t ass_stamp;$/;"	m	struct:tx_asset_t
ass_tx	bits.h	/^  tx_t ass_tx;$/;"	m	struct:tx_asset_t
ass_type	bits.h	/^  uint32_t ass_type;$/;"	m	struct:tx_asset_t
asset_type_label	asset.c	/^const char *asset_type_label(int type)$/;"	f
bcast_recv_init	../sharedaemon_bcast.c	/^int bcast_recv_init(void)$/;"	f
bcast_send_init	../sharedaemon_bcast.c	/^int bcast_send_init(void)$/;"	f
birth	../sharedaemon_client.h	/^  shtime_t birth;$/;"	m	struct:shd_t
bond_basis	bits.h	/^  uint32_t bond_basis;$/;"	m	struct:tx_bond_t
bond_credit	bits.h	/^  uint64_t bond_credit;$/;"	m	struct:tx_bond_t
bond_expire	bits.h	/^  shtime_t bond_expire;$/;"	m	struct:tx_bond_t
bond_label	bits.h	/^  char bond_label[MAX_SHARE_NAME_LENGTH];$/;"	m	struct:tx_bond_t
bond_sig	bits.h	/^  shkey_t bond_sig;$/;"	m	struct:tx_bond_t
bond_sink	bits.h	/^  char bond_sink[MAX_SHARE_HASH_LENGTH];$/;"	m	struct:tx_bond_t
bond_stamp	bits.h	/^  shtime_t bond_stamp;$/;"	m	struct:tx_bond_t
bond_state	bits.h	/^  uint32_t bond_state;$/;"	m	struct:tx_bond_t
bond_tx	bits.h	/^  tx_t bond_tx;$/;"	m	struct:tx_bond_t
bond_value	bits.h	/^  uint64_t bond_value;$/;"	m	struct:tx_bond_t
broadcast_file_op	file.c	/^int broadcast_file_op(tx_file_t *file, int op, unsigned char *payload, size_t payload_len)$/;"	f
broadcast_filter	../sharedaemon_server.c	/^static int broadcast_filter(shd_t *user, tx_t *tx, tx_net_t *net)$/;"	f	file:
broadcast_raw	../sharedaemon_server.c	/^void broadcast_raw(void *raw_data, size_t data_len)$/;"	f
buff_in	../sharedaemon_client.h	/^  shbuf_t *buff_in;$/;"	m	struct:shd_t
buff_out	../sharedaemon_client.h	/^  shbuf_t *buff_out;$/;"	m	struct:shd_t
buff_stamp	../sharedaemon_client.h	/^  shtime_t buff_stamp;$/;"	m	struct:shd_t
cli	../sharedaemon_client.h	/^  } cli;$/;"	m	struct:shd_t	typeref:union:shd_t::__anon1
complete_bond	bond.c	/^int complete_bond(tx_bond_t *bond) $/;"	f
confirm_account	account.c	/^int confirm_account(tx_account_t *acc)$/;"	f
confirm_app	app.c	/^int confirm_app(tx_app_t *app)$/;"	f
confirm_asset	asset.c	/^int confirm_asset(tx_asset_t *asset)$/;"	f
confirm_bond_value	bond.c	/^int confirm_bond_value(tx_bond_t *bond, double fee)$/;"	f
confirm_event	event.c	/^int confirm_event(tx_event_t *event)$/;"	f
confirm_init_tx	init.c	/^int confirm_init_tx(tx_init_t *ini)$/;"	f
confirm_signature	signature.c	/^int confirm_signature(shsig_t *sig, shkey_t *sig_key, char *tx_hash)$/;"	f
confirm_ward	ward.c	/^int confirm_ward(tx_ward_t *ward)$/;"	f
create_bond	bond.c	/^tx_bond_t *create_bond(shkey_t *bond_key, double duration, double fee, double basis)$/;"	f
create_bond_asset	asset.c	/^int create_bond_asset(shkey_t *id_key, tx_bond_t *bond, size_t bond_nr, tx_asset_t **asset_p)$/;"	f
create_bond_peer	bond.c	/^tx_bond_t *create_bond_peer(shpeer_t *receiver, shpeer_t *ref, double duration, double fee, double basis)$/;"	f
cycle_init	../sharedaemon_server.c	/^void cycle_init(void)$/;"	f
cycle_msg_queue	../sharedaemon_server.c	/^void cycle_msg_queue(void)$/;"	f
cycle_msg_queue_in	../sharedaemon_server.c	/^static void cycle_msg_queue_in(void)$/;"	f	file:
cycle_msg_queue_out	../sharedaemon_server.c	/^static void cycle_msg_queue_out(void)$/;"	f	file:
cycle_usb_device	../sharedaemon_server.c	/^void cycle_usb_device(void)$/;"	f
decr_app_trust	app.c	/^void decr_app_trust(tx_app_t *cli)$/;"	f
dev_host	bits.h	/^  char dev_host[16];$/;"	m	struct:tx_device_t
dev_name	bits.h	/^  char dev_name[16];$/;"	m	struct:tx_device_t
dev_net	bits.h	/^  uint64_t dev_net[4];$/;"	m	struct:tx_device_t
dev_product	bits.h	/^  uint16_t dev_product;$/;"	m	struct:tx_device_t
dev_tx	bits.h	/^  tx_t dev_tx;$/;"	m	struct:tx_device_t
dev_vendor	bits.h	/^  uint16_t dev_vendor;$/;"	m	struct:tx_device_t
device_def	../sharedaemon_device.c	/^shdev_def_t device_def[MAX_DEVICE_DEFINITIONS] = {$/;"	v
event_peer	bits.h	/^  shpeer_t event_peer;$/;"	m	struct:tx_event_t
event_sig	bits.h	/^  shsig_t event_sig;$/;"	m	struct:tx_event_t
event_stamp	bits.h	/^  shtime_t event_stamp;$/;"	m	struct:tx_event_t
event_tx	bits.h	/^  tx_t event_tx;$/;"	m	struct:tx_event_t
fd	../sharedaemon_client.h	/^  int fd;$/;"	m	struct:shd_net_t
fields	../sharedaemon_client.h	/^  shmap_t *fields;$/;"	m	struct:shd_net_t
flags	../sharedaemon_client.h	/^  int flags;$/;"	m	struct:shd_t
flags	ledger.h	/^  int flags;$/;"	m	struct:ledger_t
free_account	account.c	/^void free_account(tx_account_t **acc_p)$/;"	f
free_asset	asset.c	/^void free_asset(tx_asset_t **asset_p)$/;"	f
free_bond	bond.c	/^void free_bond(tx_bond_t **bond_p)$/;"	f
free_ledger	ledger.c	/^void free_ledger(tx_ledger_t **ledger_p, tx_t **tx_p)$/;"	f
generate_account	account.c	/^tx_account_t *generate_account(shseed_t *seed)$/;"	f
generate_asset_signature	asset.c	/^void generate_asset_signature(tx_asset_t *asset, shpeer_t *peer)$/;"	f
generate_bond_signature	bond.c	/^static void generate_bond_signature(tx_bond_t *bond)$/;"	f	file:
generate_event	event.c	/^int generate_event(tx_event_t *event, shpeer_t *peer, time_t duration)$/;"	f
generate_signature	signature.c	/^void generate_signature(shsig_t *sig, shpeer_t *peer, tx_t *tx)$/;"	f
generate_trust	trust.c	/^int generate_trust(tx_trust_t *trust, shpeer_t *peer, shkey_t *context)$/;"	f
generate_ward	ward.c	/^int generate_ward(tx_ward_t *ward, tx_t *tx, tx_id_t *id)$/;"	f
get_account_key	bits.h	747;"	d
get_app_key	bits.h	732;"	d
get_asset_key	bits.h	774;"	d
get_bond_key	bits.h	735;"	d
get_bond_key	bond.c	/^shkey_t *get_bond_key(shkey_t *sender, shkey_t *receiver, shkey_t *ref)$/;"	f
get_bond_state	bond.c	/^int get_bond_state(tx_bond_t *bond)$/;"	f
get_event_key	bits.h	762;"	d
get_file_key	bits.h	726;"	d
get_ident_key	bits.h	741;"	d
get_license_key	bits.h	720;"	d
get_metric_key	bits.h	771;"	d
get_session_key	bits.h	765;"	d
get_task_key	bits.h	753;"	d
get_thread_key	bits.h	756;"	d
get_trust_key	bits.h	759;"	d
get_wallet_key	bits.h	777;"	d
get_ward_key	bits.h	738;"	d
global_identity_confirm	identity.c	/^int global_identity_confirm(tx_id_t *id)$/;"	f
global_session_confirm	session.c	/^int global_session_confirm(tx_session_t *sess)$/;"	f
hash	bits.h	/^  char hash[MAX_SHARE_HASH_LENGTH];$/;"	m	struct:tx_t
host_mac	bits.h	/^  uint64_t host_mac[8];$/;"	m	struct:tx_host_t
host_name	bits.h	/^  char host_name[64];$/;"	m	struct:tx_host_t
host_net_max	bits.h	/^  uint64_t host_net_max[4];$/;"	m	struct:tx_host_t
host_net_of	bits.h	/^  uint64_t host_net_of[4];$/;"	m	struct:tx_host_t
host_tx	bits.h	/^  tx_t host_tx;$/;"	m	struct:tx_host_t
host_url	bits.h	/^  char host_url[MAX_SHARE_HASH_LENGTH]; \/* [a-zA-Z]{2,3}(-([a-zA-Z]{2}|[0-9]{3}))? *\/$/;"	m	struct:tx_asset_t
http_listen_sk	../sharedaemon_server.c	/^int http_listen_sk;$/;"	v
http_server_port	../sharedaemon.c	/^int http_server_port;$/;"	v
id_key	bits.h	/^  shkey_t id_key;$/;"	m	struct:tx_id_t
id_peer	bits.h	/^  shpeer_t id_peer;$/;"	m	struct:tx_id_t
id_stamp	bits.h	/^  shtime_t id_stamp;$/;"	m	struct:tx_id_t
id_tx	bits.h	/^  tx_t id_tx;$/;"	m	struct:tx_id_t
id_uid	bits.h	/^  uint64_t id_uid;$/;"	m	struct:tx_id_t
incr_app_trust	app.c	/^void incr_app_trust(tx_app_t *cli)$/;"	f
ini_endian	bits.h	/^  uint32_t ini_endian;$/;"	m	struct:tx_init_t
ini_hash	bits.h	/^  char ini_hash[MAX_SHARE_HASH_LENGTH];$/;"	m	struct:tx_init_t
ini_peer	bits.h	/^  shpeer_t ini_peer;$/;"	m	struct:tx_init_t
ini_seq	bits.h	/^  uint32_t ini_seq;$/;"	m	struct:tx_init_t
ini_stamp	bits.h	/^  shtime_t ini_stamp;$/;"	m	struct:tx_init_t
ini_tx	bits.h	/^  tx_t ini_tx;$/;"	m	struct:tx_init_t
ini_ver	bits.h	/^  uint32_t ini_ver;$/;"	m	struct:tx_init_t
init_app	app.c	/^tx_app_t *init_app(shpeer_t *peer)$/;"	f
init_subscribe_tx	subscribe.c	/^void init_subscribe_tx(tx_subscribe_t *sub, $/;"	f
ino	bits.h	/^  shfs_hdr_t ino;$/;"	m	struct:tx_file_t
ino_crc	bits.h	/^  uint64_t ino_crc;$/;"	m	struct:tx_file_t
ino_data	bits.h	/^  uint8_t ino_data[0];$/;"	m	struct:tx_file_t
ino_of	bits.h	/^  uint32_t ino_of;$/;"	m	struct:tx_file_t
ino_op	bits.h	/^  uint32_t ino_op;$/;"	m	struct:tx_file_t
ino_path	bits.h	/^  char ino_path[SHFS_PATH_MAX];$/;"	m	struct:tx_file_t
ino_peer	bits.h	/^  shpeer_t ino_peer;$/;"	m	struct:tx_file_t
ino_size	bits.h	/^  uint32_t ino_size;$/;"	m	struct:tx_file_t
ino_stamp	bits.h	/^  shtime_t ino_stamp;$/;"	m	struct:tx_file_t
ino_tx	bits.h	/^  tx_t ino_tx;$/;"	m	struct:tx_file_t
job	bits.h	/^  sexe_job_t job;$/;"	m	struct:tx_job_t
job_app	bits.h	/^  shpeer_t job_app;$/;"	m	struct:tx_job_t
job_op	bits.h	/^  uint16_t job_op;$/;"	m	struct:tx_job_t
job_status	bits.h	/^  uint32_t job_status;$/;"	m	struct:tx_job_t
job_tx	bits.h	/^  tx_t job_tx;$/;"	m	struct:tx_job_t
job_tx	bits.h	/^  tx_t job_tx;$/;"	m	struct:tx_task_t
ledger	bits.h	/^  tx_t ledger[0];$/;"	m	struct:tx_ledger_t
ledger	ledger.h	/^  tx_t *ledger;$/;"	m	struct:ledger_t
ledger_archive	ledger.c	/^int ledger_archive(ledger_t *l)$/;"	f
ledger_buff	ledger.h	/^  shbuf_t *ledger_buff;$/;"	m	struct:ledger_t
ledger_close	ledger.c	/^int ledger_close(ledger_t *l)$/;"	f
ledger_fee	bits.h	/^  uint64_t ledger_fee;$/;"	m	struct:tx_ledger_t
ledger_height	bits.h	/^  uint32_t ledger_height;$/;"	m	struct:tx_ledger_t
ledger_height	ledger.c	/^int ledger_height(ledger_t *l)$/;"	f
ledger_init	ledger.c	/^static ledger_t *ledger_init(void)$/;"	f	file:
ledger_load	ledger.c	/^ledger_t *ledger_load(shpeer_t *peer, shtime_t now)$/;"	f
ledger_peer	bits.h	/^  shpeer_t ledger_peer;$/;"	m	struct:tx_ledger_t
ledger_save	ledger.c	/^int ledger_save(ledger_t *l)$/;"	f
ledger_seq	bits.h	/^  uint32_t ledger_seq;$/;"	m	struct:tx_ledger_t
ledger_sig	bits.h	/^  shkey_t ledger_sig;$/;"	m	struct:tx_ledger_t
ledger_stamp	bits.h	/^  uint64_t ledger_stamp;$/;"	m	struct:tx_ledger_t
ledger_t	ledger.h	/^typedef struct ledger_t$/;"	s
ledger_t	ledger.h	/^} ledger_t;$/;"	t	typeref:struct:ledger_t
ledger_tx	bits.h	/^  tx_t ledger_tx;$/;"	m	struct:tx_ledger_t
ledger_tx_add	ledger.c	/^int ledger_tx_add(ledger_t *l, tx_t *tx)$/;"	f
ledger_tx_load	ledger.c	/^tx_t *ledger_tx_load(shpeer_t *peer, char *tx_hash, shtime_t tx_stamp)$/;"	f
lic	bits.h	/^  shlic_t lic;$/;"	m	struct:tx_license_t
lic_cert	bits.h	/^  shcert_t lic_cert;$/;"	m	struct:tx_license_t
lic_id	bits.h	/^  shkey_t lic_id;$/;"	m	struct:tx_license_t
lic_tx	bits.h	/^  tx_t lic_tx;$/;"	m	struct:tx_license_t
link_flag	bits.h	/^  int link_flag;$/;"	m	struct:tx_link_t
link_key	bits.h	/^  shkey_t link_key;$/;"	m	struct:tx_link_t
link_ref	bits.h	/^  shkey_t link_ref;$/;"	m	struct:tx_link_t
link_type	bits.h	/^  shkey_t link_type; \/* TX_XXX *\/$/;"	m	struct:tx_link_t
listen_sk	../sharedaemon_server.c	/^int listen_sk;$/;"	v
listen_tx	../sharedaemon_server.c	/^int listen_tx(int tx_op, shd_t *cli, shkey_t *peer_key)$/;"	f
load_asset	asset.c	/^tx_asset_t *load_asset(shkey_t *asset_key)$/;"	f
load_asset_peer	asset.c	/^shpeer_t *load_asset_peer(shkey_t *id_key)$/;"	f
load_bond	bond.c	/^tx_bond_t *load_bond(shkey_t *bond_key)$/;"	f
load_bond_peer	bond.c	/^tx_bond_t *load_bond_peer(shpeer_t *sender, shpeer_t *receiver, shpeer_t *ref)$/;"	f
load_def_account_tx	account.c	/^tx_account_t *load_def_account_tx(char *id_hash)$/;"	f
local_asset_notification	asset.c	/^int local_asset_notification(shpeer_t *peer, int tx, unsigned char *asset_data, size_t asset_size)$/;"	f
local_bond_notification	bond.c	/^int local_bond_notification(shpeer_t *peer, shfs_hdr_t *blk)$/;"	f
local_broadcast_asset	asset.c	/^int local_broadcast_asset(tx_asset_t *asset)$/;"	f
local_broadcast_bond	bond.c	/^int local_broadcast_bond(tx_bond_t *bond)$/;"	f
local_broadcast_file	file.c	/^int local_broadcast_file(tx_file_t *file)$/;"	f
local_broadcast_metric	metric.c	/^int local_broadcast_metric(tx_metric_t *metric)$/;"	f
local_broadcast_trust	trust.c	/^int local_broadcast_trust(tx_trust_t *trust)$/;"	f
local_confirm_asset	asset.c	/^int local_confirm_asset(tx_asset_t *asset)$/;"	f
local_confirm_bond	bond.c	/^int local_confirm_bond(tx_bond_t *bond)$/;"	f
local_confirm_file	file.c	/^int local_confirm_file(tx_file_t *file)$/;"	f
local_confirm_metric	metric.c	/^int local_confirm_metric(tx_metric_t *metric, uint64_t sig)$/;"	f
local_file_notification	file.c	/^int local_file_notification(shpeer_t *peer, shfs_hdr_t *blk)$/;"	f
local_identity_generate	identity.c	/^int local_identity_generate(uint64_t uid, shpeer_t *app_peer, tx_id_t **id_p)$/;"	f
local_identity_inform	identity.c	/^int local_identity_inform(tx_app_t *cli, tx_id_t *id)$/;"	f
local_identity_shadow_generate	identity.c	/^static int local_identity_shadow_generate(tx_id_t *id)$/;"	f	file:
local_metric_generate	metric.c	/^int local_metric_generate(int type, void *data, size_t data_len, tx_metric_t **metric_p)$/;"	f
local_request_segments	file.c	/^int local_request_segments(shpeer_t *origin, tx_file_t *tx, shfs_ino_t *file)$/;"	f
local_session_generate	session.c	/^int local_session_generate(tx_id_t *id, shtime_t sess_stamp, tx_session_t **sess_p)$/;"	f
local_session_inform	session.c	/^int local_session_inform(tx_app_t *cli, tx_session_t *session)$/;"	f
local_transid_generate	transaction.c	/^int local_transid_generate(int tx_op, tx_t *tx)$/;"	f
main	../sharedaemon.c	/^int main(int argc, char *argv[])$/;"	f
mem	bits.h	/^  sexe_mem_t mem;$/;"	m	struct:tx_mem_t
mem_data	bits.h	/^  unsigned char mem_data[0];$/;"	m	struct:tx_mem_t
mem_op	bits.h	/^  uint32_t mem_op;$/;"	m	struct:tx_mem_t
mem_sink	bits.h	/^  shkey_t mem_sink;$/;"	m	struct:tx_mem_t
mem_status	bits.h	/^  uint32_t mem_status;$/;"	m	struct:tx_mem_t
mem_tx	bits.h	/^  tx_t mem_tx;$/;"	m	struct:tx_mem_t
met_acc	bits.h	/^  uint64_t met_acc; $/;"	m	struct:tx_metric_t
met_expire	bits.h	/^  shtime_t met_expire;$/;"	m	struct:tx_metric_t
met_flags	bits.h	/^  uint32_t met_flags; $/;"	m	struct:tx_metric_t
met_id	bits.h	/^  shkey_t met_id;$/;"	m	struct:tx_metric_t
met_name	bits.h	/^  char met_name[8];$/;"	m	struct:tx_metric_t
met_sig	bits.h	/^  shkey_t met_sig;$/;"	m	struct:tx_metric_t
met_tx	bits.h	/^  tx_t met_tx;$/;"	m	struct:tx_metric_t
met_type	bits.h	/^  uint32_t met_type;$/;"	m	struct:tx_metric_t
msg	../sharedaemon_client.h	/^    shd_msg_t msg;$/;"	m	union:shd_t::__anon1
msg_key	../sharedaemon_client.h	/^  shkey_t msg_key;$/;"	m	struct:shd_msg_t
net	../sharedaemon_client.h	/^    shd_net_t net;$/;"	m	union:shd_t::__anon1
net	ledger.h	/^  tx_ledger_t *net;$/;"	m	struct:ledger_t
next	../sharedaemon_client.h	/^  struct shd_t *next;$/;"	m	struct:shd_t	typeref:struct:shd_t::shd_t
nonce	bits.h	/^  uint32_t nonce;$/;"	m	struct:tx_t
op_flags	../sharedaemon_client.h	/^  uint8_t op_flags[MAX_TX];$/;"	m	struct:shd_t
pam_seed	bits.h	/^  shseed_t pam_seed;$/;"	m	struct:tx_account_t
parent_hash	bits.h	/^  char parent_hash[MAX_SHARE_HASH_LENGTH];$/;"	m	struct:tx_ledger_t
peer	../sharedaemon_client.h	/^  shpeer_t peer;$/;"	m	struct:shd_t
peer	bits.h	/^  shpeer_t peer;$/;"	m	struct:tx_peer_t
peer_add	../sharedaemon_peer.c	/^int peer_add(shpeer_t *peer)$/;"	f
peer_fresh	../sharedaemon_peer.c	/^int peer_fresh(tx_app_t *app)$/;"	f
peer_stamp	bits.h	/^  shtime_t peer_stamp;$/;"	m	struct:tx_peer_t
peer_tx	bits.h	/^  tx_t peer_tx;$/;"	m	struct:tx_peer_t
peer_verify	../sharedaemon_peer.c	/^int peer_verify(shpeer_t *peer)$/;"	f
prep_init_tx	init.c	/^int prep_init_tx(tx_init_t *ini)$/;"	f
prep_net_tx	transaction.c	/^int prep_net_tx(tx_t *tx, tx_net_t *net, shkey_t *sink, size_t size)$/;"	f
proc_msg	../sharedaemon_server.c	/^void proc_msg(int type, shkey_t *key, unsigned char *data, size_t data_len)$/;"	f
process_account_tx	account.c	/^int process_account_tx(tx_account_t *acc)$/;"	f
process_app_tx	app.c	/^int process_app_tx(tx_app_t *app)$/;"	f
process_asset_tx	asset.c	/^int process_asset_tx(tx_app_t *cli, tx_asset_t *asset)$/;"	f
process_bond_tx	bond.c	/^int process_bond_tx(tx_app_t *cli, tx_bond_t *bond)$/;"	f
process_event_tx	event.c	/^int process_event_tx(tx_event_t *event)$/;"	f
process_file_tx	file.c	/^int process_file_tx(tx_app_t *cli, tx_file_t *file)$/;"	f
process_init_app_notify	init.c	/^void process_init_app_notify(shd_t *cli, tx_init_t *ini)$/;"	f
process_init_ledger_notify	init.c	/^void process_init_ledger_notify(shd_t *cli, tx_init_t *ini)$/;"	f
process_init_tx	init.c	/^int process_init_tx(shd_t *cli, tx_init_t *ini)$/;"	f
process_ledger_tx	ledger.c	/^int process_ledger_tx(tx_app_t *cli, tx_ledger_t *ledger)$/;"	f
process_trust_tx	trust.c	/^int process_trust_tx(tx_trust_t *trust)$/;"	f
process_ward_tx	ward.c	/^int process_ward_tx(tx_app_t *cli, tx_ward_t *ward)$/;"	f
propose_ledger	ledger.c	/^void propose_ledger(tx_ledger_t *led, tx_t *payload, size_t size)$/;"	f
pstore_delete	../sharedaemon_store.c	/^int pstore_delete(int tx_op, char *hash)$/;"	f
pstore_free	../sharedaemon_store.c	/^void pstore_free(void *tx)$/;"	f
pstore_init	../sharedaemon_store.c	/^void pstore_init(void)$/;"	f
pstore_load	../sharedaemon_store.c	/^void *pstore_load(int tx_op, char *hash)$/;"	f
pstore_read	../sharedaemon_store.c	/^void *pstore_read(int tx_op, char *name)$/;"	f
pstore_remove	../sharedaemon_store.c	/^void pstore_remove(int tx_op, char *hash, void *data)$/;"	f
pstore_save	../sharedaemon_store.c	/^int pstore_save(void *data, size_t data_len)$/;"	f
pstore_write	../sharedaemon_store.c	/^int pstore_write(int tx_op, char *name, unsigned char *data, size_t data_len)$/;"	f
remote_asset_notification	asset.c	/^int remote_asset_notification(shpeer_t *origin, tx_asset_t *tx)$/;"	f
remote_bond_notification	bond.c	/^int remote_bond_notification(shpeer_t *origin, tx_bond_t *tx)$/;"	f
remote_broadcast_asset	asset.c	/^int remote_broadcast_asset(shpeer_t *origin, tx_asset_t *asset)$/;"	f
remote_broadcast_bond	bond.c	/^int remote_broadcast_bond(shpeer_t *origin, tx_bond_t *bond)$/;"	f
remote_confirm_file	file.c	/^int remote_confirm_file(tx_app_t *cli, tx_file_t *file)$/;"	f
remote_file_distribute	file.c	/^int remote_file_distribute(shpeer_t *origin, tx_file_t *tx)$/;"	f
remote_file_notification	file.c	/^int remote_file_notification(shpeer_t *origin, tx_file_t *tx)$/;"	f
remote_identity_inform	identity.c	/^int remote_identity_inform(tx_id_t *id)$/;"	f
remote_session_inform	session.c	/^int remote_session_inform(tx_session_t *sess)$/;"	f
remote_trust_receive	trust.c	/^int remote_trust_receive(tx_app_t *cli, tx_trust_t *trust)$/;"	f
remote_validate_asset	asset.c	/^int remote_validate_asset(tx_app_t *cli, tx_asset_t *asset)$/;"	f
remote_validate_bond	bond.c	/^int remote_validate_bond(tx_app_t *cli, tx_bond_t *bond)$/;"	f
run_state	../sharedaemon_server.c	/^int run_state;$/;"	v
save_asset	asset.c	/^void save_asset(tx_asset_t *asset)$/;"	f
save_bond	bond.c	/^void save_bond(tx_bond_t *bond)$/;"	f
sched_tx	schedule.c	/^void sched_tx(void *data, size_t data_len)$/;"	f
sched_tx_payload	schedule.c	/^void sched_tx_payload(shkey_t *dest_key, void *data, size_t data_len, void *payload, size_t payload_len)$/;"	f
sched_tx_sink	schedule.c	/^void sched_tx_sink(shkey_t *dest_key, void *data, size_t data_len)$/;"	f
server_ledger	../sharedaemon.c	/^tx_ledger_t *server_ledger;$/;"	v
server_peer	../sharedaemon.c	/^shpeer_t *server_peer;$/;"	v
server_port	../sharedaemon.c	/^int server_port;$/;"	v
sess	bits.h	/^  sexe_sess_t sess;$/;"	m	struct:tx_sess_t
sess_heap	bits.h	/^  tx_file_t sess_heap;$/;"	m	struct:tx_sess_t
sess_id	bits.h	/^  shkey_t sess_id;$/;"	m	struct:tx_session_t
sess_key	bits.h	/^  shkey_t sess_key;$/;"	m	struct:tx_session_t
sess_stamp	bits.h	/^  shtime_t sess_stamp;$/;"	m	struct:tx_session_t
sess_tx	bits.h	/^  tx_t sess_tx;$/;"	m	struct:tx_sess_t
sess_tx	bits.h	/^  tx_t sess_tx;$/;"	m	struct:tx_session_t
set_bond_state	bond.c	/^void set_bond_state(tx_bond_t *bond, int state)$/;"	f
share_server	../sharedaemon_server.c	/^void share_server(char *process_path, char *subcmd)$/;"	f
sharedaemon_account	account.c	/^tx_account_t *sharedaemon_account(void)$/;"	f
sharedaemon_app_init	../sharedaemon_app.c	/^int sharedaemon_app_init(shd_t *cli, shpeer_t *peer)$/;"	f
sharedaemon_app_load	../sharedaemon_app.c	/^tx_app_t *sharedaemon_app_load(shkey_t *app_key)$/;"	f
sharedaemon_app_save	../sharedaemon_app.c	/^int sharedaemon_app_save(tx_app_t *app)$/;"	f
sharedaemon_bcast_recv	../sharedaemon_bcast.c	/^int sharedaemon_bcast_recv(void)$/;"	f
sharedaemon_bcast_send	../sharedaemon_bcast.c	/^int sharedaemon_bcast_send(void)$/;"	f
sharedaemon_bcast_send_peer	../sharedaemon_bcast.c	/^int sharedaemon_bcast_send_peer(shpeer_t *peer)$/;"	f
sharedaemon_bcast_term	../sharedaemon_bcast.c	/^void sharedaemon_bcast_term(void)$/;"	f
sharedaemon_client_count	../sharedaemon_client.c	/^int sharedaemon_client_count(struct sockaddr *net_addr)$/;"	f
sharedaemon_client_find	../sharedaemon_client.c	/^shd_t *sharedaemon_client_find(shkey_t *key)$/;"	f
sharedaemon_client_free	../sharedaemon_client.c	/^void sharedaemon_client_free(shd_t **cli_p)$/;"	f
sharedaemon_client_init	../sharedaemon_client.c	/^shd_t *sharedaemon_client_init(void)$/;"	f
sharedaemon_client_list	../sharedaemon_client.c	/^shd_t *sharedaemon_client_list;$/;"	v
sharedaemon_client_term	../sharedaemon_client.c	/^void sharedaemon_client_term(void)$/;"	f
sharedaemon_device_add	../sharedaemon_device.c	/^int sharedaemon_device_add(shdev_def_t *def)$/;"	f
sharedaemon_device_control	../sharedaemon_device.c	/^int sharedaemon_device_control(shdev_t *dev)$/;"	f
sharedaemon_device_free	../sharedaemon_device.c	/^void sharedaemon_device_free(shdev_t *r_dev)$/;"	f
sharedaemon_device_list	../sharedaemon_device.c	/^shdev_t *sharedaemon_device_list;$/;"	v
sharedaemon_device_poll	../sharedaemon_device.c	/^int sharedaemon_device_poll(shdev_t *dev, int poll_ms)$/;"	f
sharedaemon_device_shutdown	../sharedaemon_device.c	/^int sharedaemon_device_shutdown(shdev_t *r_dev)$/;"	f
sharedaemon_device_start	../sharedaemon_device.c	/^int sharedaemon_device_start(shdev_t *dev)$/;"	f
sharedaemon_device_timer	../sharedaemon_device.c	/^int sharedaemon_device_timer(shdev_t *dev)$/;"	f
sharedaemon_device_unlink	../sharedaemon_device.c	/^void sharedaemon_device_unlink(shdev_t *r_dev)$/;"	f
sharedaemon_fs	../sharedaemon_file.c	/^SHFS *sharedaemon_fs(void)$/;"	f
sharedaemon_httpclient_add	../sharedaemon_client.c	/^int sharedaemon_httpclient_add(int fd)$/;"	f
sharedaemon_msgclient_init	../sharedaemon_client.c	/^int sharedaemon_msgclient_init(shpeer_t *peer)$/;"	f
sharedaemon_netclient_add	../sharedaemon_client.c	/^int sharedaemon_netclient_add(int fd, shpeer_t *peer, int flags)$/;"	f
sharedaemon_netclient_conn	../sharedaemon_client.c	/^int sharedaemon_netclient_conn(shpeer_t *net_peer, struct sockaddr_in *net_addr)$/;"	f
sharedaemon_netclient_init	../sharedaemon_client.c	/^int sharedaemon_netclient_init(int fd, struct sockaddr *net_addr)$/;"	f
sharedaemon_peer	../sharedaemon.h	103;"	d
sharedaemon_print_usage	../sharedaemon.c	/^static void sharedaemon_print_usage(void)$/;"	f	file:
sharedaemon_print_version	../sharedaemon.c	/^static void sharedaemon_print_version(void)$/;"	f	file:
sharedaemon_signal	../sharedaemon.c	/^void sharedaemon_signal(int sig_num)$/;"	f
sharedaemon_term	../sharedaemon.c	/^void sharedaemon_term(void)$/;"	f
shd_msg_t	../sharedaemon_client.h	/^typedef struct shd_msg_t {$/;"	s
shd_msg_t	../sharedaemon_client.h	/^} shd_msg_t;$/;"	t	typeref:struct:shd_msg_t
shd_net_t	../sharedaemon_client.h	/^typedef struct shd_net_t {$/;"	s
shd_net_t	../sharedaemon_client.h	/^} shd_net_t;$/;"	t	typeref:struct:shd_net_t
shd_t	../sharedaemon_client.h	/^typedef struct shd_t {$/;"	s
shd_t	../sharedaemon_client.h	/^} shd_t;$/;"	t	typeref:struct:shd_t
shlogd_pid	../sharedaemon.c	/^int shlogd_pid;$/;"	v
sub_flag	bits.h	/^  uint32_t sub_flag;$/;"	m	struct:tx_subscribe_t
sub_key	bits.h	/^  shkey_t sub_key;$/;"	m	struct:tx_subscribe_t
sub_op	bits.h	/^  uint32_t sub_op;$/;"	m	struct:tx_subscribe_t
sub_peer	bits.h	/^  shpeer_t sub_peer;$/;"	m	struct:tx_subscribe_t
sub_tx	bits.h	/^  tx_t sub_tx;$/;"	m	struct:tx_subscribe_t
task	bits.h	/^  sexe_task_t task;$/;"	m	struct:tx_task_t
task_op	bits.h	/^  uint16_t task_op;$/;"	m	struct:tx_task_t
th	bits.h	/^  sexe_thread_t th;$/;"	m	struct:tx_thread_t
th_app	bits.h	/^  shpeer_t th_app;$/;"	m	struct:tx_thread_t
th_id	bits.h	/^  shkey_t th_id;$/;"	m	struct:tx_thread_t
th_sig	bits.h	/^  shsig_t th_sig;$/;"	m	struct:tx_thread_t
th_stamp	bits.h	/^  shtime_t th_stamp;$/;"	m	struct:tx_thread_t
th_status	bits.h	/^  tx_mem_t th_status;$/;"	m	struct:tx_thread_t
th_tx	bits.h	/^  tx_t th_tx;$/;"	m	struct:tx_thread_t
tmpl	../sharedaemon_client.h	/^  char tmpl[256];$/;"	m	struct:shd_net_t
trust_context	bits.h	/^  shkey_t trust_context;$/;"	m	struct:tx_trust_t
trust_peer	bits.h	/^  shkey_t trust_peer;$/;"	m	struct:tx_trust_t
trust_sig	bits.h	/^  shkey_t trust_sig;$/;"	m	struct:tx_trust_t
trust_tx	bits.h	/^  tx_t trust_tx;$/;"	m	struct:tx_trust_t
tx	bits.h	/^  tx_t tx;$/;"	m	struct:tx_link_t
tx_account_t	bits.h	/^struct tx_account_t $/;"	s
tx_account_t	bits.h	/^typedef struct tx_account_t tx_account_t;$/;"	t	typeref:struct:tx_account_t
tx_app_t	bits.h	/^struct tx_app_t $/;"	s
tx_app_t	bits.h	/^typedef struct tx_app_t tx_app_t; $/;"	t	typeref:struct:tx_app_t
tx_asset_t	bits.h	/^struct tx_asset_t$/;"	s
tx_asset_t	bits.h	/^typedef struct tx_asset_t tx_asset_t;$/;"	t	typeref:struct:tx_asset_t
tx_bond_t	bits.h	/^typedef struct tx_bond_t$/;"	s
tx_bond_t	bits.h	/^} tx_bond_t;$/;"	t	typeref:struct:tx_bond_t
tx_crc	bits.h	/^  uint32_t tx_crc;$/;"	m	struct:tx_net_t
tx_device_t	bits.h	/^struct tx_device_t$/;"	s
tx_device_t	bits.h	/^typedef struct tx_device_t tx_device_t;$/;"	t	typeref:struct:tx_device_t
tx_event_t	bits.h	/^typedef struct tx_event_t$/;"	s
tx_event_t	bits.h	/^} tx_event_t;$/;"	t	typeref:struct:tx_event_t
tx_file_t	bits.h	/^typedef struct tx_file_t$/;"	s
tx_file_t	bits.h	/^} tx_file_t;$/;"	t	typeref:struct:tx_file_t
tx_host_t	bits.h	/^struct tx_host_t$/;"	s
tx_host_t	bits.h	/^typedef struct tx_host_t tx_host_t;$/;"	t	typeref:struct:tx_host_t
tx_id_t	bits.h	/^struct tx_id_t $/;"	s
tx_id_t	bits.h	/^typedef struct tx_id_t tx_id_t; $/;"	t	typeref:struct:tx_id_t
tx_init_t	bits.h	/^struct tx_init_t$/;"	s
tx_init_t	bits.h	/^typedef struct tx_init_t tx_init_t;$/;"	t	typeref:struct:tx_init_t
tx_job_t	bits.h	/^struct tx_job_t$/;"	s
tx_job_t	bits.h	/^typedef struct tx_job_t tx_job_t;$/;"	t	typeref:struct:tx_job_t
tx_ledger_t	bits.h	/^struct tx_ledger_t$/;"	s
tx_ledger_t	bits.h	/^typedef struct tx_ledger_t tx_ledger_t;$/;"	t	typeref:struct:tx_ledger_t
tx_license_t	bits.h	/^struct tx_license_t$/;"	s
tx_license_t	bits.h	/^typedef struct tx_license_t tx_license_t;$/;"	t	typeref:struct:tx_license_t
tx_link_t	bits.h	/^struct tx_link_t$/;"	s
tx_link_t	bits.h	/^typedef struct tx_link_t tx_link_t;$/;"	t	typeref:struct:tx_link_t
tx_magic	bits.h	/^  uint32_t tx_magic;$/;"	m	struct:tx_net_t
tx_mem_t	bits.h	/^struct tx_mem_t$/;"	s
tx_mem_t	bits.h	/^typedef struct tx_mem_t tx_mem_t;$/;"	t	typeref:struct:tx_mem_t
tx_method	bits.h	/^  uint32_t tx_method;$/;"	m	struct:tx_t
tx_metric_t	bits.h	/^struct tx_metric_t$/;"	s
tx_metric_t	bits.h	/^typedef struct tx_metric_t tx_metric_t;$/;"	t	typeref:struct:tx_metric_t
tx_net_t	bits.h	/^typedef struct tx_net_t$/;"	s
tx_net_t	bits.h	/^} tx_net_t;$/;"	t	typeref:struct:tx_net_t
tx_op	bits.h	/^  uint32_t tx_op;$/;"	m	struct:tx_t
tx_peer	bits.h	/^  shkey_t tx_peer;$/;"	m	struct:tx_t
tx_peer_t	bits.h	/^struct tx_peer_t $/;"	s
tx_peer_t	bits.h	/^typedef struct tx_peer_t tx_peer_t;$/;"	t	typeref:struct:tx_peer_t
tx_proto	bits.h	/^  uint32_t tx_proto;$/;"	m	struct:tx_net_t
tx_sess_t	bits.h	/^typedef struct tx_sess_t$/;"	s
tx_sess_t	bits.h	/^} tx_sess_t;$/;"	t	typeref:struct:tx_sess_t
tx_session_t	bits.h	/^typedef struct tx_session_t$/;"	s
tx_session_t	bits.h	/^} tx_session_t;$/;"	t	typeref:struct:tx_session_t
tx_sink	bits.h	/^  shkey_t tx_sink;$/;"	m	struct:tx_net_t
tx_size	bits.h	/^  uint32_t tx_size;$/;"	m	struct:tx_net_t
tx_stamp	bits.h	/^  shtime_t tx_stamp;$/;"	m	struct:tx_net_t
tx_stamp	bits.h	/^  shtime_t tx_stamp;$/;"	m	struct:tx_t
tx_subscribe_t	bits.h	/^struct tx_subscribe_t$/;"	s
tx_subscribe_t	bits.h	/^typedef struct tx_subscribe_t tx_subscribe_t;$/;"	t	typeref:struct:tx_subscribe_t
tx_t	bits.h	/^typedef struct tx_t$/;"	s
tx_t	bits.h	/^} tx_t;$/;"	t	typeref:struct:tx_t
tx_task_t	bits.h	/^struct tx_task_t$/;"	s
tx_task_t	bits.h	/^typedef struct tx_task_t tx_task_t;$/;"	t	typeref:struct:tx_task_t
tx_thread_t	bits.h	/^struct tx_thread_t$/;"	s
tx_thread_t	bits.h	/^typedef struct tx_thread_t tx_thread_t;$/;"	t	typeref:struct:tx_thread_t
tx_trust_t	bits.h	/^struct tx_trust_t $/;"	s
tx_trust_t	bits.h	/^typedef struct tx_trust_t tx_trust_t; $/;"	t	typeref:struct:tx_trust_t
tx_vm_t	bits.h	/^typedef struct tx_vm_t$/;"	s
tx_vm_t	bits.h	/^} tx_vm_t;$/;"	t	typeref:struct:tx_vm_t
tx_wallet_t	bits.h	/^struct tx_wallet_t$/;"	s
tx_wallet_t	bits.h	/^typedef struct tx_wallet_t tx_wallet_t;$/;"	t	typeref:struct:tx_wallet_t
tx_ward_t	bits.h	/^typedef struct tx_ward_t $/;"	s
tx_ward_t	bits.h	/^} tx_ward_t;$/;"	t	typeref:struct:tx_ward_t
validate_asset_signature	asset.c	/^static int validate_asset_signature(tx_asset_t *asset)$/;"	f	file:
validate_bond_signature	bond.c	/^static int validate_bond_signature(tx_bond_t *bond)$/;"	f	file:
validate_trust	trust.c	/^int validate_trust(tx_trust_t *trust)$/;"	f
vm	bits.h	/^  sexe_vm_t vm;$/;"	m	struct:tx_vm_t
vm_op	bits.h	/^  uint32_t vm_op;$/;"	m	struct:tx_vm_t
vm_tx	bits.h	/^  tx_t vm_tx;$/;"	m	struct:tx_vm_t
wal_id	bits.h	/^  shkey_t wal_id;$/;"	m	struct:tx_wallet_t
wal_name	bits.h	/^  char wal_name[16];$/;"	m	struct:tx_wallet_t
wal_sig	bits.h	/^  shkey_t wal_sig;$/;"	m	struct:tx_wallet_t
wal_tx	bits.h	/^  tx_t wal_tx;$/;"	m	struct:tx_wallet_t
ward_hash	bits.h	/^  char ward_hash[MAX_SHARE_HASH_LENGTH];$/;"	m	struct:tx_ward_t
ward_id	bits.h	/^  tx_id_t ward_id;$/;"	m	struct:tx_ward_t
ward_op	bits.h	/^  uint16_t ward_op; $/;"	m	struct:tx_ward_t
ward_peer	bits.h	/^  shpeer_t ward_peer;$/;"	m	struct:tx_ward_t
ward_sig	bits.h	/^  shsig_t ward_sig; $/;"	m	struct:tx_ward_t
ward_stamp	bits.h	/^  shtime_t ward_stamp;$/;"	m	struct:tx_ward_t
ward_tx	bits.h	/^  tx_t ward_tx;$/;"	m	struct:tx_ward_t
