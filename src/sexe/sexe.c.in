

/*
 * @copyright
 *
 *  Copyright 2014 Neo Natura
 *
 *  This file is part of the Share Library.
 *  (https://github.com/neonatura/share)
 *        
 *  The Share Library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version. 
 *
 *  The Share Library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with The Share Library.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  @endcopyright
 */
#include "sexe.h"
#include "llimits.h"
#include "lundump.h"


#define SEXE_VERSION @PACKAGE_VERSION@


void sexe_header (lu_byte* h)
{
  int ver_maj = (int)fabs(SEXE_VERSION);
  int ver_min = (int)(SEXE_VERSION - ver_maj);
  int ver = (ver_maj * 16) + ver_min;
  int x=1;

  memcpy(h,SEXE_SIGNATURE,sizeof(SEXE_SIGNATURE)-sizeof(char));
  h+=sizeof(SEXE_SIGNATURE)-sizeof(char);
  *h++=cast_byte(SEXE_VERSION);
  *h++=cast_byte(SEXE_FORMAT);
  *h++=cast_byte(*(char*)&x);			/* endianness */
  *h++=cast_byte(sizeof(int));
  *h++=cast_byte(sizeof(size_t));
  *h++=cast_byte(sizeof(Instruction));
  *h++=cast_byte(sizeof(lua_Number));
  *h++=cast_byte(((lua_Number)0.5)==0);		/* is lua_Number integral? */
  memcpy(h,LUAC_TAIL,sizeof(LUAC_TAIL)-sizeof(char));
}
